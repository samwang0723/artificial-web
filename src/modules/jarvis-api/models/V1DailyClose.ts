/* tslint:disable */
/* eslint-disable */
/**
 * Javis smart stock analysis API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface V1DailyClose
 */
export interface V1DailyClose {
    /**
     * 
     * @type {string}
     * @memberof V1DailyClose
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof V1DailyClose
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof V1DailyClose
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof V1DailyClose
     */
    deletedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof V1DailyClose
     */
    stockID?: string;
    /**
     * 
     * @type {string}
     * @memberof V1DailyClose
     */
    date?: string;
    /**
     * 
     * @type {string}
     * @memberof V1DailyClose
     */
    tradeShares?: string;
    /**
     * 
     * @type {string}
     * @memberof V1DailyClose
     */
    transactions?: string;
    /**
     * 
     * @type {string}
     * @memberof V1DailyClose
     */
    turnover?: string;
    /**
     * 
     * @type {number}
     * @memberof V1DailyClose
     */
    open?: number;
    /**
     * 
     * @type {number}
     * @memberof V1DailyClose
     */
    close?: number;
    /**
     * 
     * @type {number}
     * @memberof V1DailyClose
     */
    high?: number;
    /**
     * 
     * @type {number}
     * @memberof V1DailyClose
     */
    low?: number;
    /**
     * 
     * @type {number}
     * @memberof V1DailyClose
     */
    diff?: number;
}

/**
 * Check if a given object implements the V1DailyClose interface.
 */
export function instanceOfV1DailyClose(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1DailyCloseFromJSON(json: any): V1DailyClose {
    return V1DailyCloseFromJSONTyped(json, false);
}

export function V1DailyCloseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1DailyClose {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'deletedAt': !exists(json, 'deletedAt') ? undefined : (new Date(json['deletedAt'])),
        'stockID': !exists(json, 'stockID') ? undefined : json['stockID'],
        'date': !exists(json, 'date') ? undefined : json['date'],
        'tradeShares': !exists(json, 'tradeShares') ? undefined : json['tradeShares'],
        'transactions': !exists(json, 'transactions') ? undefined : json['transactions'],
        'turnover': !exists(json, 'turnover') ? undefined : json['turnover'],
        'open': !exists(json, 'open') ? undefined : json['open'],
        'close': !exists(json, 'close') ? undefined : json['close'],
        'high': !exists(json, 'high') ? undefined : json['high'],
        'low': !exists(json, 'low') ? undefined : json['low'],
        'diff': !exists(json, 'diff') ? undefined : json['diff'],
    };
}

export function V1DailyCloseToJSON(value?: V1DailyClose | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'deletedAt': value.deletedAt === undefined ? undefined : (value.deletedAt.toISOString()),
        'stockID': value.stockID,
        'date': value.date,
        'tradeShares': value.tradeShares,
        'transactions': value.transactions,
        'turnover': value.turnover,
        'open': value.open,
        'close': value.close,
        'high': value.high,
        'low': value.low,
        'diff': value.diff,
    };
}

