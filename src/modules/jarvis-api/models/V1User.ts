/* tslint:disable */
/* eslint-disable */
/**
 * Javis smart stock analysis API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface V1User
 */
export interface V1User {
    /**
     * 
     * @type {string}
     * @memberof V1User
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof V1User
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof V1User
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof V1User
     */
    deletedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof V1User
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof V1User
     */
    phone?: string;
    /**
     * 
     * @type {string}
     * @memberof V1User
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof V1User
     */
    lastName?: string;
}

/**
 * Check if a given object implements the V1User interface.
 */
export function instanceOfV1User(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1UserFromJSON(json: any): V1User {
    return V1UserFromJSONTyped(json, false);
}

export function V1UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1User {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'deletedAt': !exists(json, 'deletedAt') ? undefined : (new Date(json['deletedAt'])),
        'email': !exists(json, 'email') ? undefined : json['email'],
        'phone': !exists(json, 'phone') ? undefined : json['phone'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
    };
}

export function V1UserToJSON(value?: V1User | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'deletedAt': value.deletedAt === undefined ? undefined : (value.deletedAt.toISOString()),
        'email': value.email,
        'phone': value.phone,
        'firstName': value.firstName,
        'lastName': value.lastName,
    };
}

