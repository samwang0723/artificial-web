/* tslint:disable */
/* eslint-disable */
/**
 * Javis smart stock analysis API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface V1CreateUserResponse
 */
export interface V1CreateUserResponse {
    /**
     * 
     * @type {boolean}
     * @memberof V1CreateUserResponse
     */
    success?: boolean;
    /**
     * 
     * @type {number}
     * @memberof V1CreateUserResponse
     */
    status?: number;
    /**
     * 
     * @type {string}
     * @memberof V1CreateUserResponse
     */
    errorMessage?: string;
    /**
     * 
     * @type {string}
     * @memberof V1CreateUserResponse
     */
    errorCode?: string;
}

/**
 * Check if a given object implements the V1CreateUserResponse interface.
 */
export function instanceOfV1CreateUserResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1CreateUserResponseFromJSON(json: any): V1CreateUserResponse {
    return V1CreateUserResponseFromJSONTyped(json, false);
}

export function V1CreateUserResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1CreateUserResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'success': !exists(json, 'success') ? undefined : json['success'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'errorMessage': !exists(json, 'errorMessage') ? undefined : json['errorMessage'],
        'errorCode': !exists(json, 'errorCode') ? undefined : json['errorCode'],
    };
}

export function V1CreateUserResponseToJSON(value?: V1CreateUserResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'success': value.success,
        'status': value.status,
        'errorMessage': value.errorMessage,
        'errorCode': value.errorCode,
    };
}

