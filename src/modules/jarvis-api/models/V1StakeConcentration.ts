/* tslint:disable */
/* eslint-disable */
/**
 * Javis smart stock analysis API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface V1StakeConcentration
 */
export interface V1StakeConcentration {
    /**
     * 
     * @type {string}
     * @memberof V1StakeConcentration
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof V1StakeConcentration
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof V1StakeConcentration
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof V1StakeConcentration
     */
    deletedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof V1StakeConcentration
     */
    stockID?: string;
    /**
     * 
     * @type {string}
     * @memberof V1StakeConcentration
     */
    date?: string;
    /**
     * 
     * @type {string}
     * @memberof V1StakeConcentration
     */
    sumBuyShares?: string;
    /**
     * 
     * @type {string}
     * @memberof V1StakeConcentration
     */
    sumSellShares?: string;
    /**
     * 
     * @type {number}
     * @memberof V1StakeConcentration
     */
    avgBuyPrice?: number;
    /**
     * 
     * @type {number}
     * @memberof V1StakeConcentration
     */
    avgSellPrice?: number;
    /**
     * 
     * @type {number}
     * @memberof V1StakeConcentration
     */
    concentration1?: number;
    /**
     * 
     * @type {number}
     * @memberof V1StakeConcentration
     */
    concentration5?: number;
    /**
     * 
     * @type {number}
     * @memberof V1StakeConcentration
     */
    concentration10?: number;
    /**
     * 
     * @type {number}
     * @memberof V1StakeConcentration
     */
    concentration20?: number;
    /**
     * 
     * @type {number}
     * @memberof V1StakeConcentration
     */
    concentration60?: number;
}

/**
 * Check if a given object implements the V1StakeConcentration interface.
 */
export function instanceOfV1StakeConcentration(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1StakeConcentrationFromJSON(json: any): V1StakeConcentration {
    return V1StakeConcentrationFromJSONTyped(json, false);
}

export function V1StakeConcentrationFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1StakeConcentration {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'deletedAt': !exists(json, 'deletedAt') ? undefined : (new Date(json['deletedAt'])),
        'stockID': !exists(json, 'stockID') ? undefined : json['stockID'],
        'date': !exists(json, 'date') ? undefined : json['date'],
        'sumBuyShares': !exists(json, 'sumBuyShares') ? undefined : json['sumBuyShares'],
        'sumSellShares': !exists(json, 'sumSellShares') ? undefined : json['sumSellShares'],
        'avgBuyPrice': !exists(json, 'avgBuyPrice') ? undefined : json['avgBuyPrice'],
        'avgSellPrice': !exists(json, 'avgSellPrice') ? undefined : json['avgSellPrice'],
        'concentration1': !exists(json, 'concentration1') ? undefined : json['concentration1'],
        'concentration5': !exists(json, 'concentration5') ? undefined : json['concentration5'],
        'concentration10': !exists(json, 'concentration10') ? undefined : json['concentration10'],
        'concentration20': !exists(json, 'concentration20') ? undefined : json['concentration20'],
        'concentration60': !exists(json, 'concentration60') ? undefined : json['concentration60'],
    };
}

export function V1StakeConcentrationToJSON(value?: V1StakeConcentration | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'deletedAt': value.deletedAt === undefined ? undefined : (value.deletedAt.toISOString()),
        'stockID': value.stockID,
        'date': value.date,
        'sumBuyShares': value.sumBuyShares,
        'sumSellShares': value.sumSellShares,
        'avgBuyPrice': value.avgBuyPrice,
        'avgSellPrice': value.avgSellPrice,
        'concentration1': value.concentration1,
        'concentration5': value.concentration5,
        'concentration10': value.concentration10,
        'concentration20': value.concentration20,
        'concentration60': value.concentration60,
    };
}

