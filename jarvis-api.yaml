swagger: '2.0'
info:
  title: Javis smart stock analysis API
  version: '1.3'
tags:
  - name: JarvisV1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/balances:
    get:
      operationId: JarvisV1_GetBalance
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetBalanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - JarvisV1
  /v1/categories:
    get:
      operationId: JarvisV1_ListCategories
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListCategoriesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - JarvisV1
  /v1/dailycloses:
    post:
      operationId: JarvisV1_ListDailyClose
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListDailyCloseResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListDailyCloseRequest'
      tags:
        - JarvisV1
  /v1/login:
    post:
      operationId: JarvisV1_Login
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1LoginResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1LoginRequest'
      tags:
        - JarvisV1
  /v1/logout:
    post:
      operationId: JarvisV1_Logout
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1LogoutResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1LogoutRequest'
      tags:
        - JarvisV1
  /v1/orders:
    post:
      operationId: JarvisV1_ListOrders
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListOrderResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListOrderRequest'
      tags:
        - JarvisV1
    put:
      operationId: JarvisV1_CreateOrder
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateOrderResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateOrderRequest'
      tags:
        - JarvisV1
  /v1/pickedstocks:
    get:
      operationId: JarvisV1_ListPickedStocks
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListPickedStocksResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - JarvisV1
    post:
      operationId: JarvisV1_InsertPickedStocks
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1InsertPickedStocksResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1InsertPickedStocksRequest'
      tags:
        - JarvisV1
  /v1/pickedstocks/{stockID}:
    delete:
      operationId: JarvisV1_DeletePickedStocks
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeletePickedStocksResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: stockID
          in: path
          required: true
          type: string
      tags:
        - JarvisV1
  /v1/selections:
    post:
      operationId: JarvisV1_ListSelections
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListSelectionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListSelectionRequest'
      tags:
        - JarvisV1
  /v1/stakeconcentration:
    post:
      operationId: JarvisV1_GetStakeConcentration
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetStakeConcentrationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetStakeConcentrationRequest'
      tags:
        - JarvisV1
  /v1/stocks:
    post:
      operationId: JarvisV1_ListStocks
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListStockResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListStockRequest'
      tags:
        - JarvisV1
  /v1/threeprimary:
    post:
      operationId: JarvisV1_ListThreePrimary
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListThreePrimaryResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ListThreePrimaryRequest'
      tags:
        - JarvisV1
  /v1/transactions:
    post:
      operationId: JarvisV1_CreateTransaction
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateTransactionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateTransactionRequest'
      tags:
        - JarvisV1
  /v1/users:
    get:
      operationId: JarvisV1_ListUsers
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListUsersResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: offset
          in: query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - JarvisV1
    post:
      operationId: JarvisV1_CreateUser
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateUserRequest'
      tags:
        - JarvisV1
definitions:
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
        description: >-
          A URL/resource name that uniquely identifies the type of the
          serialized

          protocol buffer message. This string must contain at least

          one "/" character. The last segment of the URL's path must represent

          the fully qualified name of the type (as in

          `path/google.protobuf.Duration`). The name should be in a canonical
          form

          (e.g., leading "." is not accepted).


          In practice, teams usually precompile into the binary all types that
          they

          expect it to use in the context of Any. However, for URLs which use
          the

          scheme `http`, `https`, or no scheme, one can optionally set up a type

          server that maps type URLs to message definitions as follows:


          * If no scheme is provided, `https` is assumed.

          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official

          protobuf release, and it is not used for type URLs beginning with

          type.googleapis.com.


          Schemes other than `http`, `https` (or the empty scheme) might be

          used with implementation specific semantics.
    additionalProperties: {}
    description: >-
      `Any` contains an arbitrary serialized protocol buffer message along with
      a

      URL that describes the type of the serialized message.


      Protobuf library provides support to pack/unpack Any values in the form

      of utility functions or additional generated methods of the Any type.


      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }

      Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

      Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := anypb.New(foo)
           if err != nil {
             ...
           }
           ...
           foo := &pb.Foo{}
           if err := any.UnmarshalTo(foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use

      'type.googleapis.com/full.type.name' as the type URL and the unpack

      methods only use the fully qualified type name after the last '/'

      in the type URL, for example "foo.bar.com/x/y.z" will yield type

      name "y.z".



      JSON


      The JSON representation of an `Any` value uses the regular

      representation of the deserialized, embedded message, with an

      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON

      representation, that representation will be embedded adding a field

      `value` which holds the custom JSON in addition to the `@type`

      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          $ref: '#/definitions/protobufAny'
  v1Balance:
    type: object
    properties:
      id:
        type: string
        format: uint64
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      balance:
        type: number
        format: float
      available:
        type: number
        format: float
      pending:
        type: number
        format: float
  v1CreateOrderRequest:
    type: object
    properties:
      orderType:
        type: string
      stockID:
        type: string
      tradePrice:
        type: number
        format: float
      quantity:
        type: string
        format: uint64
      exchangeDate:
        type: string
  v1CreateOrderResponse:
    type: object
    properties:
      success:
        type: boolean
      status:
        type: integer
        format: int32
      errorMessage:
        type: string
      errorCode:
        type: string
  v1CreateTransactionRequest:
    type: object
    properties:
      orderType:
        type: string
      amount:
        type: number
        format: float
  v1CreateTransactionResponse:
    type: object
    properties:
      success:
        type: boolean
      status:
        type: integer
        format: int32
      errorMessage:
        type: string
      errorCode:
        type: string
  v1CreateUserRequest:
    type: object
    properties:
      email:
        type: string
      phone:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
  v1CreateUserResponse:
    type: object
    properties:
      success:
        type: boolean
      status:
        type: integer
        format: int32
      errorMessage:
        type: string
      errorCode:
        type: string
  v1DailyClose:
    type: object
    properties:
      id:
        type: string
        format: uint64
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      deletedAt:
        type: string
        format: date-time
      stockID:
        type: string
      date:
        type: string
      tradeShares:
        type: string
        format: uint64
      transactions:
        type: string
        format: uint64
      turnover:
        type: string
        format: uint64
      open:
        type: number
        format: float
      close:
        type: number
        format: float
      high:
        type: number
        format: float
      low:
        type: number
        format: float
      diff:
        type: number
        format: float
  v1DeletePickedStocksResponse:
    type: object
    properties:
      success:
        type: boolean
      status:
        type: integer
        format: int32
      errorMessage:
        type: string
      errorCode:
        type: string
  v1GetBalanceResponse:
    type: object
    properties:
      balance:
        $ref: '#/definitions/v1Balance'
  v1GetStakeConcentrationRequest:
    type: object
    properties:
      stockID:
        type: string
      date:
        type: string
  v1GetStakeConcentrationResponse:
    type: object
    properties:
      stakeConcentration:
        $ref: '#/definitions/v1StakeConcentration'
  v1InsertPickedStocksRequest:
    type: object
    properties:
      stockIDs:
        type: array
        items:
          type: string
  v1InsertPickedStocksResponse:
    type: object
    properties:
      success:
        type: boolean
      status:
        type: integer
        format: int32
      errorMessage:
        type: string
      errorCode:
        type: string
  v1ListCategoriesResponse:
    type: object
    properties:
      entries:
        type: array
        items:
          type: string
  v1ListDailyCloseRequest:
    type: object
    properties:
      offset:
        type: integer
        format: int32
      limit:
        type: integer
        format: int32
      searchParams:
        $ref: '#/definitions/v1ListDailyCloseSearchParams'
  v1ListDailyCloseResponse:
    type: object
    properties:
      offset:
        type: integer
        format: int32
      limit:
        type: integer
        format: int32
      totalCount:
        type: string
        format: int64
      entries:
        type: array
        items:
          $ref: '#/definitions/v1DailyClose'
  v1ListDailyCloseSearchParams:
    type: object
    properties:
      stockID:
        type: string
      start:
        type: string
      end:
        type: string
  v1ListOrderRequest:
    type: object
    properties:
      offset:
        type: integer
        format: int32
      limit:
        type: integer
        format: int32
      searchParams:
        $ref: '#/definitions/v1ListOrderSearchParams'
  v1ListOrderResponse:
    type: object
    properties:
      offset:
        type: integer
        format: int32
      limit:
        type: integer
        format: int32
      totalCount:
        type: string
        format: int64
      entries:
        type: array
        items:
          $ref: '#/definitions/v1Order'
  v1ListOrderSearchParams:
    type: object
    properties:
      stockIDs:
        type: array
        items:
          type: string
      exchangeMonth:
        type: string
      status:
        type: string
  v1ListPickedStocksResponse:
    type: object
    properties:
      entries:
        type: array
        items:
          $ref: '#/definitions/v1Selection'
  v1ListSelectionRequest:
    type: object
    properties:
      date:
        type: string
      strict:
        type: boolean
  v1ListSelectionResponse:
    type: object
    properties:
      entries:
        type: array
        items:
          $ref: '#/definitions/v1Selection'
  v1ListStockRequest:
    type: object
    properties:
      offset:
        type: integer
        format: int32
      limit:
        type: integer
        format: int32
      searchParams:
        $ref: '#/definitions/v1ListStockSearchParams'
  v1ListStockResponse:
    type: object
    properties:
      offset:
        type: integer
        format: int32
      limit:
        type: integer
        format: int32
      totalCount:
        type: string
        format: int64
      entries:
        type: array
        items:
          $ref: '#/definitions/v1Stock'
  v1ListStockSearchParams:
    type: object
    properties:
      stockIDs:
        type: array
        items:
          type: string
      country:
        type: string
      name:
        type: string
      category:
        type: string
  v1ListThreePrimaryRequest:
    type: object
    properties:
      offset:
        type: integer
        format: int32
      limit:
        type: integer
        format: int32
      searchParams:
        $ref: '#/definitions/v1ListThreePrimarySearchParams'
  v1ListThreePrimaryResponse:
    type: object
    properties:
      offset:
        type: integer
        format: int32
      limit:
        type: integer
        format: int32
      totalCount:
        type: string
        format: int64
      entries:
        type: array
        items:
          $ref: '#/definitions/v1ThreePrimary'
  v1ListThreePrimarySearchParams:
    type: object
    properties:
      stockID:
        type: string
      start:
        type: string
      end:
        type: string
  v1ListUsersResponse:
    type: object
    properties:
      offset:
        type: integer
        format: int32
      limit:
        type: integer
        format: int32
      totalCount:
        type: string
        format: int64
      entries:
        type: array
        items:
          $ref: '#/definitions/v1User'
  v1LoginRequest:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  v1LoginResponse:
    type: object
    properties:
      success:
        type: boolean
      status:
        type: integer
        format: int32
      errorMessage:
        type: string
      errorCode:
        type: string
      accessToken:
        type: string
  v1LogoutRequest:
    type: object
  v1LogoutResponse:
    type: object
    properties:
      success:
        type: boolean
      status:
        type: integer
        format: int32
      errorMessage:
        type: string
      errorCode:
        type: string
  v1Order:
    type: object
    properties:
      id:
        type: string
        format: uint64
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      status:
        type: string
      stockID:
        type: string
      buyPrice:
        type: number
        format: float
      sellPrice:
        type: number
        format: float
      buyQuantity:
        type: string
        format: uint64
      sellQuantity:
        type: string
        format: uint64
      buyExchangeDate:
        type: string
      sellExchangeDate:
        type: string
      profitablePrice:
        type: number
        format: float
      profitLoss:
        type: number
        format: float
      profitLossPercent:
        type: number
        format: float
      stockName:
        type: string
      currentPrice:
        type: number
        format: float
  v1Selection:
    type: object
    properties:
      stockID:
        type: string
      name:
        type: string
      category:
        type: string
      date:
        type: string
      concentration1:
        type: number
        format: float
      concentration5:
        type: number
        format: float
      concentration10:
        type: number
        format: float
      concentration20:
        type: number
        format: float
      concentration60:
        type: number
        format: float
      volume:
        type: integer
        format: int32
      foreign:
        type: integer
        format: int32
      trust:
        type: integer
        format: int32
      dealer:
        type: integer
        format: int32
      hedging:
        type: integer
        format: int32
      open:
        type: number
        format: float
      close:
        type: number
        format: float
      high:
        type: number
        format: float
      low:
        type: number
        format: float
      diff:
        type: number
        format: float
      trust10:
        type: integer
        format: int32
      foreign10:
        type: integer
        format: int32
      quoteChange:
        type: number
        format: float
  v1StakeConcentration:
    type: object
    properties:
      id:
        type: string
        format: uint64
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      deletedAt:
        type: string
        format: date-time
      stockID:
        type: string
      date:
        type: string
      sumBuyShares:
        type: string
        format: uint64
      sumSellShares:
        type: string
        format: uint64
      avgBuyPrice:
        type: number
        format: float
      avgSellPrice:
        type: number
        format: float
      concentration1:
        type: number
        format: float
      concentration5:
        type: number
        format: float
      concentration10:
        type: number
        format: float
      concentration20:
        type: number
        format: float
      concentration60:
        type: number
        format: float
  v1Stock:
    type: object
    properties:
      id:
        type: string
        format: uint64
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      deletedAt:
        type: string
        format: date-time
      stockID:
        type: string
      name:
        type: string
      country:
        type: string
      category:
        type: string
      market:
        type: string
  v1ThreePrimary:
    type: object
    properties:
      id:
        type: string
        format: uint64
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      deletedAt:
        type: string
        format: date-time
      stockID:
        type: string
      date:
        type: string
      foreignTradeShares:
        type: string
        format: int64
      trustTradeShares:
        type: string
        format: int64
      dealerTradeShares:
        type: string
        format: int64
      hedgingTradeShares:
        type: string
        format: int64
  v1User:
    type: object
    properties:
      id:
        type: string
        format: uint64
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      deletedAt:
        type: string
        format: date-time
      email:
        type: string
      phone:
        type: string
      firstName:
        type: string
      lastName:
        type: string
